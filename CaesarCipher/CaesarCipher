import edu.duke.*;
import org.apache.commons.csv.*;
import java.io.*;

public class CaesarCipher {

    public String encrypt(String input, int key) {
    
        //Make a StringBuilder with message (encrypted)
        StringBuilder encrypted = new StringBuilder(input.toLowerCase());
        
        //Write down the alphabet
        String alphabet1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        String alphabet = alphabet1.toLowerCase();
        
        //Compute the shifted alphabet
        String shiftedAlphabet = alphabet.substring(key)+
        alphabet.substring(0,key);
        System.out.println(shiftedAlphabet);
        
        //Count from 0 to < length of encrypted, (call it i)
        for(int i = 0; i < encrypted.length(); i++) {
        
            //Look at the ith character of encrypted (call it currChar)
            char currChar = encrypted.charAt(i);
            
            //Find the index of currChar in the alphabet (call it idx)
            int idx = alphabet.indexOf(currChar);
            
            //If currChar is in the alphabet
            if(idx != -1){
            
                //Get the idxth character of shiftedAlphabet (newChar)
                char newChar = shiftedAlphabet.charAt(idx);
                
                //Replace the ith character of encrypted with newChar
                encrypted.setCharAt(i, newChar);
            }
            //Otherwise: do nothing
        }
        //Your answer is the String inside of encrypted
        return encrypted.toString();
    }
    
    public void testCaesar() {
        int key = 15;
        String encrypted = encrypt("Can you imagine life WITHOUT the internet AND computers in your pocket?", key);
        System.out.println("key is " + key + "\n" + encrypted);
    }
    
    public String encrypt2 (String input, int key1, int key2) {
    
        //Make a StringBuilder with message (encrypted)
        StringBuilder encrypted = new StringBuilder(input.toLowerCase());
        
        //Write down the alphabet
        String alphabet1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        String alphabet = alphabet1.toLowerCase();
        
        //Compute the shifted alphabet
        String shiftedAlphabetkey1 = alphabet.substring(key1)+
        alphabet.substring(0,key1);
        String shiftedAlphabetkey2 = alphabet.substring(key2)+
        alphabet.substring(0,key2);
      
        //Count from 0 to < length of encrypted, (call it i)
        for(int i = 0; i < encrypted.length(); i++) {
            
            //Look at the ith character of encrypted (call it currChar)
            char currChar = encrypted.charAt(i);
           
           //Find the index of currChar in the alphabet (call it idx)
            int idx = alphabet.indexOf(currChar);
            System.out.println(idx);
            
            //If currChar is in the alphabet
            if(idx !=-1) {

                if (i%2 == 0){
                    //Get the idxth character of shiftedAlphabet (newChar)
                    char newChar = shiftedAlphabetkey1.charAt(idx);
                    //Replace the ith character of encrypted with newChar
                    encrypted.setCharAt(i, newChar);
                }
                else {
                    char newChar = shiftedAlphabetkey2.charAt(idx);
                    System.out.println(newChar);
                    //Replace the ith character of encrypted with newChar
                    encrypted.setCharAt(i, newChar);
                    //Otherwise: do nothing
                }
            }
        }
        //Your answer is the String inside of encrypted
        return encrypted.toString();
    }
    
    public void testencrypt2() {
        int key1 = 21;
        int key2 = 8;
        //String encrypted = encrypt2("At noon be in the conference room with your hat on for a surprise party. YELL LOUD!", key1, key2);
        String encrypted = encrypt2("Can you imagine life WITHOUT the internet AND computers in your pocket?", key1, key2);
        System.out.println("key is " + key1 + key2 + "\n" + encrypted);
    }
}

